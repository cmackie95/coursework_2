- name: Configure Production VM
  hosts: azure
  user: cmackie95
  become: yes

  vars:
    myResourceGroup: DevOps
    myVM: productionVM

  tasks:
  - name: Install Various Packages
    apt:
      update_cache: yes
      name: "{{ packages }}"
    vars:
      packages:
      - libssl-dev
      - libffi-dev
      - python-dev
      - python-pip
      
  - stat:
      path: /home/cmackie95/kubectl.sh
    register: kubectlResult
   
  - stat:
      path: /home/cmackie95/minikube.sh
    register: minikubeResult   

  - stat:
      path: /home/cmackie95/kubectl_pod_deployment.yml
    register: podDeploymentResult

  - stat:
      path: /home/cmackie95/kubectl_service_deployment.yml
    register: serviceDeploymentResult

  - name: Copy kubectl.sh to productionVM
    copy:
      src: ./kubectl.sh
      dest: /home/cmackie95/kubectl.sh
    when: kubectlResult.stat.exists == false

  - name: Set kubectl.sh permissions
    command: chmod +x /home/cmackie95/kubectl.sh

  - name: Run kubectl installation script
    command: /home/cmackie95/kubectl.sh

  - name: Copy minikube.sh to productionVM
    copy:
      src: ./minikube.sh
      dest: /home/cmackie95/minikube.sh
    when: minikubeResult.stat.exists == false

  - name: Set minikube.sh permissions
    command: chmod +x /home/cmackie95/minikube.sh

  - name: Run minikube installation script
    command: sudo /home/cmackie95/minikube.sh
   
  - name: Copy kubectl_pod_deployment.yml to productionVM
    copy:
      src: ./kubectl_pod_deployment.yml
      dest: /home/cmackie95/kubectl_pod_deployment.yml
    when: podDeploymentResult.stat.exists == false

  - name: Copy kubectl_service_deployment.yml to productionVM
    copy:
      src: ./kubectl_service_deployment.yml
      dest: /home/cmackie95/kubectl_service_deployment.yml
    when: serviceDeploymentResult.stat.exists == false 